name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AWS_REGION: 'ap-southeast-1'
  ECR_REGISTRY_NAME: '783560535431.dkr.ecr.ap-southeast-1.amazonaws.com'
  ECR_REPOSITORY: 'learn-github-actions'
  NAMESPACE: learn-github
  SECRET: 'learnsecret'

jobs:
  build:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test WebAPI
      run: dotnet test --no-build --verbosity normal

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ github.sha }}

      run: |
        # Build a docker container and push it to ECR
        docker build -f NET6.WebAPI/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  # deploy_eks:
  #   needs: build
  #   runs-on: self-hosted
  #   steps:

  #   - name: Configure AWS credentials
  #     uses: aws-actions/configure-aws-credentials@v1
  #     with:
  #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       aws-region: ${{ env.AWS_REGION }}

  #   # Create namespace if doesn't exist
  #   - run: |
  #       kubectl create namespace ${{ env.NAMESPACE }} --dry-run=client -o json | kubectl apply -f -

  #   # Deploy app to EKS
  #   - uses: azure/k8s-deploy@v1
  #     with:
  #       manifests: |
  #         ${{ github.workspace }}/k8s/webapi.yml
  #         ${{ github.workspace }}/k8s/ingress-aks.yml
  #       images: |
  #         ${{ env.ECR_REGISTRY_NAME }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
  #       imagepullsecrets: |
  #         ${{ env.SECRET }}
  #       namespace: ${{ env.NAMESPACE }}
  #     env:
  #       IMAGE_TAG: ${{ github.sha }}
